{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, auth, router) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.error = null;\n    this.form = this.fb.nonNullable.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(3)]]\n    });\n  }\n  submit() {\n    if (this.form.invalid) return;\n    const {\n      email,\n      password\n    } = this.form.value;\n    this.auth.login(email, password).subscribe(user => {\n      if (user) {\n        this.router.navigate(['/tasks']);\n      } else {\n        this.error = 'Invalid credentials';\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 20,\n      vars: 3,\n      consts: [[1, \"container\", \"mt-5\", 2, \"max-width\", \"420px\"], [1, \"card\", \"shadow-sm\"], [1, \"card-body\"], [1, \"mb-3\", \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"you@example.com\", 1, \"form-control\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"alert alert-danger mt-3\", 4, \"ngIf\"], [1, \"text-center\", \"mt-3\"], [\"routerLink\", \"/signup\"], [1, \"alert\", \"alert-danger\", \"mt-3\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n          i0.ɵɵtext(4, \"Task Manager Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 6);\n          i0.ɵɵtext(12, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(13, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"button\", 9);\n          i0.ɵɵtext(15, \"Log in\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(17, \"div\", 11)(18, \"a\", 12);\n          i0.ɵɵtext(19, \"Don't have an account? Sign Up\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.error);\n        }\n      },\n      dependencies: [i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiLyogbWluaW1hbCAqLyJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAsBA,UAAU,QAAQ,gBAAgB;;;;;;;;ICclDC,+BAAmD;IAAAA,YAAW;IAAAA,iBAAM;;;;IAAjBA,eAAW;IAAXA,kCAAW;;;ADLpE,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,EAAe,EAAUC,IAAiB,EAAUC,MAAc;IAAlE,OAAE,GAAFF,EAAE;IAAuB,SAAI,GAAJC,IAAI;IAAuB,WAAM,GAANC,MAAM;IAP9E,UAAK,GAAkB,IAAI;IAE3B,SAAI,GAAG,IAAI,CAACF,EAAE,CAACG,WAAW,CAACC,KAAK,CAAC;MAC/BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDE,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC;KAC9D,CAAC;EAEuF;EAEzFC,MAAM;IACJ,IAAI,IAAI,CAACC,IAAI,CAACC,OAAO,EAAE;IACvB,MAAM;MAAEN,KAAK;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACG,IAAI,CAACE,KAAK;IAC3C,IAAI,CAACX,IAAI,CAACY,KAAK,CAACR,KAAM,EAAEE,QAAS,CAAC,CAACO,SAAS,CAACC,IAAI,IAAG;MAClD,IAAIA,IAAI,EAAE;QACR,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;OACjC,MAAM;QACL,IAAI,CAACC,KAAK,GAAG,qBAAqB;;IAEtC,CAAC,CAAC;EACJ;;;uBApBWnB,cAAc;IAAA;EAAA;;;YAAdA,cAAc;MAAAoB;MAAAC;MAAAC;MAAAC;MAAAC;QAAA;UCV3BzB,8BAAoD;UAGjBA,kCAAkB;UAAAA,iBAAK;UACpDA,+BAA+C;UAAtBA;YAAA,OAAY0B,YAAQ;UAAA,EAAC;UAC5C1B,8BAAkB;UACUA,qBAAK;UAAAA,iBAAQ;UACvCA,2BAA+F;UACjGA,iBAAM;UACNA,+BAAkB;UACUA,yBAAQ;UAAAA,iBAAQ;UAC1CA,4BAA8F;UAChGA,iBAAM;UACNA,kCAA8E;UAAAA,uBAAM;UAAAA,iBAAS;UAE/FA,kEAAoE;UACtEA,iBAAM;UAGVA,gCAA8B;UAAwBA,+CAA8B;UAAAA,iBAAI;;;UAf5EA,eAAkB;UAAlBA,oCAAkB;UAS8BA,eAAyB;UAAzBA,2CAAyB;UAEzEA,eAAW;UAAXA,gCAAW","names":["Validators","i0","LoginComponent","constructor","fb","auth","router","nonNullable","group","email","required","password","minLength","submit","form","invalid","value","login","subscribe","user","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["S:\\springboot_tms_ready\\tsm\\src\\app\\login\\login.component.ts","S:\\springboot_tms_ready\\tsm\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  error: string | null = null;\n\n  form = this.fb.nonNullable.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', [Validators.required, Validators.minLength(3)]],\n  });\n\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router) {}\n\n  submit() {\n    if (this.form.invalid) return;\n    const { email, password } = this.form.value;\n    this.auth.login(email!, password!).subscribe(user => {\n      if (user) {\n        this.router.navigate(['/tasks']);\n      } else {\n        this.error = 'Invalid credentials';\n      }\n    });\n  }\n}","<div class=\"container mt-5\" style=\"max-width:420px\">\n  <div class=\"card shadow-sm\">\n    <div class=\"card-body\">\n      <h3 class=\"mb-3 text-center\">Task Manager Login</h3>\n      <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Email</label>\n          <input type=\"email\" class=\"form-control\" formControlName=\"email\" placeholder=\"you@example.com\">\n        </div>\n        <div class=\"mb-3\">\n          <label class=\"form-label\">Password</label>\n          <input type=\"password\" class=\"form-control\" formControlName=\"password\" placeholder=\"••••••••\">\n        </div>\n        <button class=\"btn btn-primary w-100\" type=\"submit\" [disabled]=\"form.invalid\">Log in</button>\n      </form>\n      <div *ngIf=\"error\" class=\"alert alert-danger mt-3\">{{ error }}</div>\n    </div>\n  </div>\n</div>\n<div class=\"text-center mt-3\"><a routerLink=\"/signup\">Don't have an account? Sign Up</a></div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}