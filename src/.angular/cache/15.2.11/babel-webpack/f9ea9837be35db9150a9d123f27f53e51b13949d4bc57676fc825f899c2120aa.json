{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api';\n  }\n  // ---------- Auth ----------\n  login(email, password) {\n    return this.http.post(`${this.baseUrl}/auth/login`, {\n      email,\n      password\n    });\n  }\n  signup(user) {\n    return this.http.post(`${this.baseUrl}/auth/signup`, user);\n  }\n  // ---------- Users ----------\n  getUsers() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n  addUser(user) {\n    return this.http.post(`${this.baseUrl}/users`, user);\n  }\n  deleteUser(userId) {\n    return this.http.delete(`${this.baseUrl}/users/${userId}`);\n  }\n  // ---------- Tasks ----------\n  getTasks() {\n    return this.http.get(`${this.baseUrl}/tasks`);\n  }\n  getTask(id) {\n    return this.http.get(`${this.baseUrl}/tasks/${id}`);\n  }\n  addTask(task) {\n    return this.http.post(`${this.baseUrl}/tasks`, task);\n  }\n  updateTask(taskId, task) {\n    return this.http.put(`${this.baseUrl}/tasks/${taskId}`, task);\n  }\n  deleteTask(taskId) {\n    return this.http.delete(`${this.baseUrl}/tasks/${taskId}`);\n  }\n  // Tasks by currently logged-in user\n  getTasksByUser(userId) {\n    return this.http.get(`${this.baseUrl}/tasks/user/${userId}`);\n  }\n  markComplete(taskId) {\n    return this.http.patch(`${this.baseUrl}/tasks/${taskId}`, {\n      status: 'COMPLETED'\n    });\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,2BAA2B;EAEN;EAEvC;EACAC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACC,OAAO,aAAa,EAAE;MAAEH,KAAK;MAAEC;IAAQ,CAAE,CAAC;EAChF;EAEAG,MAAM,CAACC,IAAmB;IACxB,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACC,OAAO,cAAc,EAAEE,IAAI,CAAC;EAClE;EAEA;EACAC,QAAQ;IACN,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,QAAQ,CAAC;EACvD;EAEAK,OAAO,CAACH,IAAmB;IACzB,OAAO,IAAI,CAACP,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAEE,IAAI,CAAC;EAC5D;EAEAI,UAAU,CAACC,MAAc;IACvB,OAAO,IAAI,CAACZ,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACR,OAAO,UAAUO,MAAM,EAAE,CAAC;EAClE;EAEA;EACAE,QAAQ;IACN,OAAO,IAAI,CAACd,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,QAAQ,CAAC;EACvD;EAEAU,OAAO,CAACC,EAAU;IAChB,OAAO,IAAI,CAAChB,IAAI,CAACS,GAAG,CAAO,GAAG,IAAI,CAACJ,OAAO,UAAUW,EAAE,EAAE,CAAC;EAC3D;EAEAC,OAAO,CAACC,IAAmB;IACzB,OAAO,IAAI,CAAClB,IAAI,CAACI,IAAI,CAAO,GAAG,IAAI,CAACC,OAAO,QAAQ,EAAEa,IAAI,CAAC;EAC5D;EAEAC,UAAU,CAACC,MAAc,EAAEF,IAAmB;IAC5C,OAAO,IAAI,CAAClB,IAAI,CAACqB,GAAG,CAAO,GAAG,IAAI,CAAChB,OAAO,UAAUe,MAAM,EAAE,EAAEF,IAAI,CAAC;EACrE;EAEAI,UAAU,CAACF,MAAc;IACvB,OAAO,IAAI,CAACpB,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACR,OAAO,UAAUe,MAAM,EAAE,CAAC;EAClE;EAEA;EACAG,cAAc,CAACX,MAAc;IAC3B,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAS,GAAG,IAAI,CAACJ,OAAO,eAAeO,MAAM,EAAE,CAAC;EACtE;EAEAY,YAAY,CAACJ,MAAc;IACzB,OAAO,IAAI,CAACpB,IAAI,CAACyB,KAAK,CAAO,GAAG,IAAI,CAACpB,OAAO,UAAUe,MAAM,EAAE,EAAE;MAAEM,MAAM,EAAE;IAAW,CAAE,CAAC;EAC1F;;;uBAvDW5B,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAA6B,SAAV7B,UAAU;MAAA8B,YADG;IAAM;EAAA","names":["ApiService","constructor","http","login","email","password","post","baseUrl","signup","user","getUsers","get","addUser","deleteUser","userId","delete","getTasks","getTask","id","addTask","task","updateTask","taskId","put","deleteTask","getTasksByUser","markComplete","patch","status","factory","providedIn"],"sourceRoot":"","sources":["S:\\springboot_tms_ready\\tsm\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Task, User } from '../models/task.model';\n\n@Injectable({ providedIn: 'root' })\nexport class ApiService {\n  private baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  // ---------- Auth ----------\n  login(email: string, password: string): Observable<User> {\n    return this.http.post<User>(`${this.baseUrl}/auth/login`, { email, password });\n  }\n\n  signup(user: Partial<User>): Observable<User> {\n    return this.http.post<User>(`${this.baseUrl}/auth/signup`, user);\n  }\n\n  // ---------- Users ----------\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(`${this.baseUrl}/users`);\n  }\n\n  addUser(user: Partial<User>): Observable<User> {\n    return this.http.post<User>(`${this.baseUrl}/users`, user);\n  }\n\n  deleteUser(userId: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/users/${userId}`);\n  }\n\n  // ---------- Tasks ----------\n  getTasks(): Observable<Task[]> {\n    return this.http.get<Task[]>(`${this.baseUrl}/tasks`);\n  }\n\n  getTask(id: number): Observable<Task> {\n    return this.http.get<Task>(`${this.baseUrl}/tasks/${id}`);\n  }\n\n  addTask(task: Partial<Task>): Observable<Task> {\n    return this.http.post<Task>(`${this.baseUrl}/tasks`, task);\n  }\n\n  updateTask(taskId: number, task: Partial<Task>): Observable<Task> {\n    return this.http.put<Task>(`${this.baseUrl}/tasks/${taskId}`, task);\n  }\n\n  deleteTask(taskId: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/tasks/${taskId}`);\n  }\n\n  // Tasks by currently logged-in user\n  getTasksByUser(userId: number): Observable<Task[]> {\n    return this.http.get<Task[]>(`${this.baseUrl}/tasks/user/${userId}`);\n  }\n\n  markComplete(taskId: number): Observable<Task> {\n    return this.http.patch<Task>(`${this.baseUrl}/tasks/${taskId}`, { status: 'COMPLETED' });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}