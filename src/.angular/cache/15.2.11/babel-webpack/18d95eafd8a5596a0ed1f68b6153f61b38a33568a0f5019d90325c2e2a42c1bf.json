{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nconst STORAGE_KEY = 'tms_user';\nexport class AuthService {\n  constructor(api) {\n    this.api = api;\n  }\n  login(email, password) {\n    return this.api.login(email, password).pipe(tap(user => localStorage.setItem(STORAGE_KEY, JSON.stringify(user))));\n  }\n  signup(data) {\n    return this.api.signup(data).pipe(tap(user => localStorage.setItem(STORAGE_KEY, JSON.stringify(user))));\n  }\n  logout() {\n    localStorage.removeItem(STORAGE_KEY);\n  }\n  currentUser() {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    return raw ? JSON.parse(raw) : null;\n  }\n  isLoggedIn() {\n    return !!this.currentUser();\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.ApiService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AACA,SAAqBA,GAAG,QAAQ,MAAM;;;AAItC,MAAMC,WAAW,GAAG,UAAU;AAG9B,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,GAAe;IAAf,QAAG,GAAHA,GAAG;EAAe;EAEtCC,KAAK,CAACC,KAAa,EAAEC,QAAgB;IACnC,OAAO,IAAI,CAACH,GAAG,CAACC,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,CAACC,IAAI,CACzCR,GAAG,CAACS,IAAI,IAAIC,YAAY,CAACC,OAAO,CAACV,WAAW,EAAEW,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CACrE;EACH;EAEAK,MAAM,CAACC,IAAmB;IACxB,OAAO,IAAI,CAACX,GAAG,CAACU,MAAM,CAACC,IAAI,CAAC,CAACP,IAAI,CAC/BR,GAAG,CAACS,IAAI,IAAIC,YAAY,CAACC,OAAO,CAACV,WAAW,EAAEW,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC,CAAC,CACrE;EACH;EAEAO,MAAM;IACJN,YAAY,CAACO,UAAU,CAAChB,WAAW,CAAC;EACtC;EAEAiB,WAAW;IACT,MAAMC,GAAG,GAAGT,YAAY,CAACU,OAAO,CAACnB,WAAW,CAAC;IAC7C,OAAOkB,GAAG,GAAGP,IAAI,CAACS,KAAK,CAACF,GAAG,CAAS,GAAG,IAAI;EAC7C;EAEAG,UAAU;IACR,OAAO,CAAC,CAAC,IAAI,CAACJ,WAAW,EAAE;EAC7B;;;uBA1BWhB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAqB,SAAXrB,WAAW;MAAAsB,YADE;IAAM;EAAA","names":["tap","STORAGE_KEY","AuthService","constructor","api","login","email","password","pipe","user","localStorage","setItem","JSON","stringify","signup","data","logout","removeItem","currentUser","raw","getItem","parse","isLoggedIn","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\springboot_tms_ready\\tsm\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { ApiService } from './api.service';\nimport { User } from '../models/task.model';\n\nconst STORAGE_KEY = 'tms_user';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  constructor(private api: ApiService) {}\n\n  login(email: string, password: string): Observable<User> {\n    return this.api.login(email, password).pipe(\n      tap(user => localStorage.setItem(STORAGE_KEY, JSON.stringify(user)))\n    );\n  }\n\n  signup(data: Partial<User>): Observable<User> {\n    return this.api.signup(data).pipe(\n      tap(user => localStorage.setItem(STORAGE_KEY, JSON.stringify(user)))\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem(STORAGE_KEY);\n  }\n\n  currentUser(): User | null {\n    const raw = localStorage.getItem(STORAGE_KEY);\n    return raw ? JSON.parse(raw) as User : null;\n  }\n\n  isLoggedIn(): boolean {\n    return !!this.currentUser();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}