{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8080/api';\n  }\n  getUsers() {\n    return this.http.get(`${this.baseUrl}/users`);\n  }\n  addUser(user) {\n    return this.http.post(`${this.baseUrl}/users`, user);\n  }\n  getTasks() {\n    return this.http.get(`${this.baseUrl}/tasks`);\n  }\n  addTask(task) {\n    return this.http.post(`${this.baseUrl}/tasks`, task);\n  }\n  static {\n    this.ɵfac = function ApiService_Factory(t) {\n      return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ApiService,\n      factory: ApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAIrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,2BAA2B;EAEN;EAEvCC,QAAQ;IACN,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,QAAQ,CAAC;EACtD;EAEAC,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEE,IAAI,CAAC;EAC3D;EAEAE,QAAQ;IACN,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAQ,GAAG,IAAI,CAACC,OAAO,QAAQ,CAAC;EACtD;EAEAK,OAAO,CAACC,IAAS;IACf,OAAO,IAAI,CAACT,IAAI,CAACM,IAAI,CAAM,GAAG,IAAI,CAACH,OAAO,QAAQ,EAAEM,IAAI,CAAC;EAC3D;;;uBApBWX,UAAU;IAAA;EAAA;;;aAAVA,UAAU;MAAAY,SAAVZ,UAAU;MAAAa,YAFT;IAAM;EAAA","names":["ApiService","constructor","http","getUsers","get","baseUrl","addUser","user","post","getTasks","addTask","task","factory","providedIn"],"sourceRoot":"","sources":["D:\\Wipro\\TaskManagmentSystem\\tsm\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  private baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  getUsers(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/users`);\n  }\n\n  addUser(user: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/users`, user);\n  }\n\n  getTasks(): Observable<any[]> {\n    return this.http.get<any[]>(`${this.baseUrl}/tasks`);\n  }\n\n  addTask(task: any): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/tasks`, task);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}