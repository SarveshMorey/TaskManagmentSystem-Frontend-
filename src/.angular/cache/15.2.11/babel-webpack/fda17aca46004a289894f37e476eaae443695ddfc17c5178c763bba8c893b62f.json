{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"@angular/common\";\nfunction TasksComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TasksComponent_table_7_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"span\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 11)(11, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function TasksComponent_table_7_tr_14_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const t_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r5.edit(t_r4));\n    });\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TasksComponent_table_7_tr_14_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const t_r4 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.markComplete(t_r4));\n    });\n    i0.ɵɵtext(14, \"Complete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TasksComponent_table_7_tr_14_Template_button_click_15_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const t_r4 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.delete(t_r4));\n    });\n    i0.ɵɵtext(16, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const t_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r4.taskId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r4.title);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(t_r4.status);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(t_r4.dueDate || \"-\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", t_r4.status === \"COMPLETED\");\n  }\n}\nfunction TasksComponent_table_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 8)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"ID\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Due\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\");\n    i0.ɵɵtext(12, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\");\n    i0.ɵɵtemplate(14, TasksComponent_table_7_tr_14_Template, 17, 5, \"tr\", 9);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.tasks);\n  }\n}\nfunction TasksComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵtext(1, \" No tasks yet. Click \\\"New Task\\\" to create one. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TasksComponent {\n  constructor(api, router, auth) {\n    this.api = api;\n    this.router = router;\n    this.auth = auth;\n    this.tasks = [];\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.load();\n  }\n  load() {\n    this.loading = true;\n    this.api.getTasks().subscribe({\n      next: data => {\n        this.tasks = data;\n        this.loading = false;\n      },\n      error: () => {\n        this.loading = false;\n      }\n    });\n  }\n  add() {\n    this.router.navigate(['/tasks/new']);\n  }\n  edit(t) {\n    this.router.navigate(['/tasks', t.taskId, 'edit']);\n  }\n  markComplete(t) {\n    if (!t.taskId) return;\n    this.api.updateTask(t.taskId, {\n      status: 'COMPLETED'\n    }).subscribe(() => this.load());\n  }\n  delete(t) {\n    if (!t.taskId) return;\n    if (confirm('Delete this task?')) {\n      this.api.deleteTask(t.taskId).subscribe(() => this.load());\n    }\n  }\n  static {\n    this.ɵfac = function TasksComponent_Factory(t) {\n      return new (t || TasksComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TasksComponent,\n      selectors: [[\"app-tasks\"]],\n      decls: 9,\n      vars: 3,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\", \"mb-3\"], [1, \"m-0\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"class\", \"table table-striped\", 4, \"ngIf\"], [\"class\", \"alert alert-secondary\", 4, \"ngIf\"], [1, \"alert\", \"alert-info\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [1, \"badge\", \"text-bg-secondary\"], [1, \"d-flex\", \"gap-2\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"btn\", \"btn-sm\", \"btn-outline-success\", 3, \"disabled\", \"click\"], [1, \"btn\", \"btn-sm\", \"btn-outline-danger\", 3, \"click\"], [1, \"alert\", \"alert-secondary\"]],\n      template: function TasksComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Tasks\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function TasksComponent_Template_button_click_4_listener() {\n            return ctx.add();\n          });\n          i0.ɵɵtext(5, \"+ New Task\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(6, TasksComponent_div_6_Template, 2, 0, \"div\", 4);\n          i0.ɵɵtemplate(7, TasksComponent_table_7_Template, 15, 1, \"table\", 5);\n          i0.ɵɵtemplate(8, TasksComponent_div_8_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.tasks == null ? null : ctx.tasks.length);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading && !(ctx.tasks == null ? null : ctx.tasks.length));\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf],\n      styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdGFza3MvdGFza3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiLyogc3R5bGVzICovIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["i0","TasksComponent","constructor","api","router","auth","ngOnInit","load","loading","getTasks","subscribe","next","data","tasks","error","add","navigate","edit","t","taskId","markComplete","updateTask","status","delete","confirm","deleteTask","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\Admin\\Downloads\\angular_tms_ready_with_auth\\tsm\\src\\app\\tasks\\tasks.component.html","C:\\Users\\Admin\\Downloads\\angular_tms_ready_with_auth\\tsm\\src\\app\\tasks\\tasks.component.ts"],"sourcesContent":["<div class=\"container mt-4\">\n  <div class=\"d-flex justify-content-between align-items-center mb-3\">\n    <h3 class=\"m-0\">Tasks</h3>\n    <button class=\"btn btn-success\" (click)=\"add()\">+ New Task</button>\n  </div>\n\n  <div *ngIf=\"loading\" class=\"alert alert-info\">Loading...</div>\n\n  <table class=\"table table-striped\" *ngIf=\"tasks?.length\">\n    <thead>\n      <tr>\n        <th>ID</th>\n        <th>Title</th>\n        <th>Status</th>\n        <th>Due</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let t of tasks\">\n        <td>{{ t.taskId }}</td>\n        <td>{{ t.title }}</td>\n        <td><span class=\"badge text-bg-secondary\">{{ t.status }}</span></td>\n        <td>{{ t.dueDate || '-' }}</td>\n        <td class=\"d-flex gap-2\">\n          <button class=\"btn btn-sm btn-primary\" (click)=\"edit(t)\">Edit</button>\n          <button class=\"btn btn-sm btn-outline-success\" (click)=\"markComplete(t)\" [disabled]=\"t.status==='COMPLETED'\">Complete</button>\n          <button class=\"btn btn-sm btn-outline-danger\" (click)=\"delete(t)\">Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n\n  <div *ngIf=\"!loading && !tasks?.length\" class=\"alert alert-secondary\">\n    No tasks yet. Click \"New Task\" to create one.\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Task } from '../models/task.model';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit {\n  tasks: Task[] = [];\n  loading = false;\n\n  constructor(private api: ApiService, private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void { this.load(); }\n\n  load() {\n    this.loading = true;\n    this.api.getTasks().subscribe({\n      next: (data) => { this.tasks = data; this.loading = false; },\n      error: () => { this.loading = false; }\n    });\n  }\n\n  add() {\n    this.router.navigate(['/tasks/new']);\n  }\n\n  edit(t: Task) {\n    this.router.navigate(['/tasks', t.taskId, 'edit']);\n  }\n\n  markComplete(t: Task) {\n    if (!t.taskId) return;\n    this.api.updateTask(t.taskId, { status: 'COMPLETED' }).subscribe(() => this.load());\n  }\n\n  delete(t: Task) {\n    if (!t.taskId) return;\n    if (confirm('Delete this task?')) {\n      this.api.deleteTask(t.taskId).subscribe(() => this.load());\n    }\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}