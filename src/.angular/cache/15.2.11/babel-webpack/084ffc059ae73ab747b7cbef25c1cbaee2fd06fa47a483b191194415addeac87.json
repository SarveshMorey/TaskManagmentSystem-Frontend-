{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/api.service\";\nimport * as i4 from \"../services/auth.service\";\nconst _c0 = function () {\n  return [\"/tasks\"];\n};\nexport class TaskAddEditComponent {\n  constructor(fb, route, api, router, auth) {\n    this.fb = fb;\n    this.route = route;\n    this.api = api;\n    this.router = router;\n    this.auth = auth;\n    this.id = null;\n    this.loading = false;\n    this.form = this.fb.group({\n      title: ['', Validators.required],\n      description: [''],\n      status: ['PENDING', Validators.required],\n      dueDate: ['']\n    });\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    this.id = idParam ? +idParam : null;\n    if (this.id) {\n      this.loading = true;\n      this.api.getTask(this.id).subscribe(t => {\n        this.form.patchValue({\n          title: t.title,\n          description: t.description || '',\n          status: t.status,\n          dueDate: t.dueDate || ''\n        });\n        this.loading = false;\n      });\n    }\n  }\n  save() {\n    if (this.form.invalid) return;\n    const payload = this.form.value;\n    if (this.id) {\n      this.api.updateTask(this.id, payload).subscribe(() => this.router.navigate(['/tasks']));\n    } else {\n      const u = this.auth.currentUser();\n      if (u) payload.userId = u.userId;\n      this.api.addTask(payload).subscribe(() => this.router.navigate(['/tasks']));\n    }\n  }\n  static {\n    this.ɵfac = function TaskAddEditComponent_Factory(t) {\n      return new (t || TaskAddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ApiService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i4.AuthService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskAddEditComponent,\n      selectors: [[\"app-task-add-edit\"]],\n      decls: 30,\n      vars: 6,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"mb-3\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-label\"], [\"formControlName\", \"title\", \"required\", \"\", 1, \"form-control\"], [\"rows\", \"3\", \"formControlName\", \"description\", 1, \"form-control\"], [\"formControlName\", \"status\", 1, \"form-select\"], [\"value\", \"PENDING\"], [\"value\", \"IN_PROGRESS\"], [\"value\", \"COMPLETED\"], [\"type\", \"date\", \"formControlName\", \"dueDate\", 1, \"form-control\"], [1, \"btn\", \"btn-primary\"], [1, \"btn\", \"btn-link\", 3, \"routerLink\"]],\n      template: function TaskAddEditComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function TaskAddEditComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.save();\n          });\n          i0.ɵɵelementStart(4, \"div\", 1)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Title\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 3);\n          i0.ɵɵtext(10, \"Description\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"textarea\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 1)(13, \"label\", 3);\n          i0.ɵɵtext(14, \"Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"select\", 6)(16, \"option\", 7);\n          i0.ɵɵtext(17, \"PENDING\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"option\", 8);\n          i0.ɵɵtext(19, \"IN_PROGRESS\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"option\", 9);\n          i0.ɵɵtext(21, \"COMPLETED\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(22, \"div\", 1)(23, \"label\", 3);\n          i0.ɵɵtext(24, \"Due Date\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(25, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 11);\n          i0.ɵɵtext(27, \"Save\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(28, \"a\", 12);\n          i0.ɵɵtext(29, \"Cancel\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"opacity-50\", ctx.loading);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.id ? \"Edit Task\" : \"New Task\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(25);\n          i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n        }\n      },\n      dependencies: [i2.RouterLink, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Validators","TaskAddEditComponent","constructor","fb","route","api","router","auth","group","title","required","description","status","dueDate","ngOnInit","idParam","snapshot","paramMap","get","id","loading","getTask","subscribe","t","form","patchValue","save","invalid","payload","value","updateTask","navigate","u","currentUser","userId","addTask","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["S:\\springboot_tms_ready\\tsm\\src\\app\\task-add-edit\\task-add-edit.component.ts","S:\\springboot_tms_ready\\tsm\\src\\app\\task-add-edit\\task-add-edit.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { Task } from '../models/task.model';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-task-add-edit',\n  templateUrl: './task-add-edit.component.html'\n})\nexport class TaskAddEditComponent implements OnInit {\n  id: number | null = null;\n  loading = false;\n\n  form = this.fb.group({\n    title: ['', Validators.required],\n    description: [''],\n    status: ['PENDING', Validators.required],\n    dueDate: ['']\n  });\n\n  constructor(private fb: FormBuilder, private route: ActivatedRoute, private api: ApiService, private router: Router, private auth: AuthService) {}\n\n  ngOnInit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    this.id = idParam ? +idParam : null;\n    if (this.id) {\n      this.loading = true;\n      this.api.getTask(this.id).subscribe(t => {\n        this.form.patchValue({\n          title: t.title,\n          description: t.description || '',\n          status: t.status,\n          dueDate: t.dueDate || ''\n        });\n        this.loading = false;\n      });\n    }\n  }\n\n  save() {\n    if (this.form.invalid) return;\n    const payload = this.form.value as Partial<Task>;\n    if (this.id) {\n      this.api.updateTask(this.id, payload).subscribe(() => this.router.navigate(['/tasks']));\n    } else {\n      const u = this.auth.currentUser(); if (u) (payload as any).userId = u.userId!; this.api.addTask(payload).subscribe(() => this.router.navigate(['/tasks']));\n    }\n  }\n}","<div class=\"container mt-4\" [class.opacity-50]=\"loading\">\n  <h3 class=\"mb-3\">{{ id ? 'Edit Task' : 'New Task' }}</h3>\n  <form [formGroup]=\"form\" (ngSubmit)=\"save()\">\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Title</label>\n      <input class=\"form-control\" formControlName=\"title\" required>\n    </div>\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Description</label>\n      <textarea rows=\"3\" class=\"form-control\" formControlName=\"description\"></textarea>\n    </div>\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Status</label>\n      <select class=\"form-select\" formControlName=\"status\">\n        <option value=\"PENDING\">PENDING</option>\n        <option value=\"IN_PROGRESS\">IN_PROGRESS</option>\n        <option value=\"COMPLETED\">COMPLETED</option>\n      </select>\n    </div>\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Due Date</label>\n      <input type=\"date\" class=\"form-control\" formControlName=\"dueDate\">\n    </div>\n    <button class=\"btn btn-primary\">Save</button>\n    <a class=\"btn btn-link\" [routerLink]=\"['/tasks']\">Cancel</a>\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}